<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间 用于隔离sql语句 
	#{} 点位符 相当于jdbc的？
	${} 字符串拼接指令，如果入参为普通数据类型{}内只能为value

-->
<!-- 动态代理开发规则
	1. namespace必须是接口的全路径名
	2. 接口的方法名必须和sql id一致
	3 接口入参必须与paramtertype类型一致
	4接口的返回值必须与resultType类型一致
 -->
<mapper namespace="live.leer.mybatis.mapper.OrderMapper">
    <select id="getOrderList" resultType="order">
        SELECT * FROM `order`
    </select>

    <!-- resultMap入门
         type:映射成的pojo类型
         id：resultMap唯一标识
    -->
    <resultMap type="order" id="orderMap">
        <!-- id标签用于绑定主键 -->
        <id property="id" column="id"/>

        <!-- 使用result绑定普通字段 -->
        <result property="userId" column="user_id"/>
        <!-- <result property="number" column="number"/>
        <result property="createtime" column="createtime"/>
        <result property="note" column="note"/> -->
    </resultMap>

    <!-- 使用resultMap -->
    <select id="getOrderListMap" resultMap="orderMap">
        SELECT * FROM `order`
    </select>

    <!-- 一对一关联查询-resultMap -->
    <resultMap type="order" id="order_user_map">
        <!-- id标签用于绑定主键 -->
        <id property="id" column="id"/>
        <!-- 使用result绑定普通字段 -->
        <result property="userId" column="user_id"/>
        <result property="number" column="number"/>
        <result property="createtime" column="createtime"/>
        <result property="note" column="note"/>

        <!-- association:配置一对一关联
             property:绑定的用户属性
             javaType:属性数据类型，支持别名
        -->
        <association property="user" javaType="live.leer.mybatis.pojo.User">
            <id property="id" column="user_id"/>

            <result property="username" column="username"/>
            <result property="address" column="address"/>
            <result property="sex" column="sex"/>
        </association>
    </resultMap>


    <!-- 一对一关联查询-使用resultMap -->
    <select id="getOrderUser2" resultMap="order_user_map">
        SELECT
        o.`id`,
        o.`user_id`,
        o.`number`,
        o.`createtime`,
        o.`note`,
        u.`username`,
        u.`address`,
        u.`sex`
        FROM `order` o
        LEFT JOIN `user` u
        ON u.id = o.`user_id`
    </select>


</mapper>
